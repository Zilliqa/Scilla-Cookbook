"use strict";(self.webpackChunkdocu_scilla=self.webpackChunkdocu_scilla||[]).push([[9168],{229:function(e){e.exports=JSON.parse('{"name":"pattern","permalink":"/tags/pattern","docs":[{"id":"recipes/scilla-recipes/pattern_proxy","title":"Pattern (proxy)","description":"Proxy patterns allows developers to adapt to a changing environment and to react to bugs and other errors. To overcome the limitations introduced by the immutability of contract code, a contract can be split up into modules, which are then virtually upgradeable.","permalink":"/recipes/scilla-recipes/pattern_proxy"},{"id":"recipes/scilla-recipes/pattern_view","title":"Pattern (viewer)","description":"The viewer pattern is a standardised way of implementing functions that return a value without using callbacks.","permalink":"/recipes/scilla-recipes/pattern_view"}],"allTagsPath":"/tags"}')}}]);