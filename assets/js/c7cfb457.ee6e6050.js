"use strict";(self.webpackChunkdocu_scilla=self.webpackChunkdocu_scilla||[]).push([[8308],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return b}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),s=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=s(r),b=n,m=f["".concat(c,".").concat(b)]||f[b]||u[b]||l;return r?o.createElement(m,a(a({ref:t},p),{},{components:r})):o.createElement(m,a({ref:t},p))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,a=new Array(l);a[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var s=2;s<l;s++)a[s]=r[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}f.displayName="MDXCreateElement"},338:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return f}});var o=r(7462),n=r(3366),l=(r(7294),r(3905)),a=["components"],i={tags:["bool","boolean","true","false","if"]},c="Boolean",s={unversionedId:"recipes/scilla-recipes/bool",id:"recipes/scilla-recipes/bool",isDocsHomePage:!1,title:"Boolean",description:"The boolean (Bool) is a type which can have two values, true and false. A Bool is considered an ADT when performing interactions with contracts.",source:"@site/docs/recipes/scilla-recipes/bool.md",sourceDirName:"recipes/scilla-recipes",slug:"/recipes/scilla-recipes/bool",permalink:"/Scilla-Cookbook-1/recipes/scilla-recipes/bool",editUrl:"https://github.com/Zilliqa/Scilla-Cookbook/tree/master/docs/recipes/scilla-recipes/bool.md",tags:[{label:"bool",permalink:"/Scilla-Cookbook-1/tags/bool"},{label:"boolean",permalink:"/Scilla-Cookbook-1/tags/boolean"},{label:"true",permalink:"/Scilla-Cookbook-1/tags/true"},{label:"false",permalink:"/Scilla-Cookbook-1/tags/false"},{label:"if",permalink:"/Scilla-Cookbook-1/tags/if"}],version:"current",frontMatter:{tags:["bool","boolean","true","false","if"]},sidebar:"tutorialSidebar",previous:{title:"BNum",permalink:"/Scilla-Cookbook-1/recipes/scilla-recipes/bnum"},next:{title:"Decentralised exchange",permalink:"/Scilla-Cookbook-1/recipes/scilla-recipes/dex"}},p=[{value:"Further reading",id:"further-reading",children:[]}],u={toc:p};function f(e){var t=e.components,r=(0,n.Z)(e,a);return(0,l.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"boolean"},"Boolean"),(0,l.kt)("p",null,"The boolean (Bool) is a type which can have two values, true and false. A Bool is considered an ADT when performing interactions with contracts."),(0,l.kt)("p",null,"Consider the below definition of creating a type similar to Bool."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ocaml"},"type Example = | True | False\n")),(0,l.kt)("p",null,"A Bool value can be returned from functions like ",(0,l.kt)("inlineCode",{parentName:"p"},"builtin eq")," which leverages the two types of Bool to return a value. The value ",(0,l.kt)("inlineCode",{parentName:"p"},"is_equal")," is either true or false."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ocaml"},"is_equal = builtin eq a b\n")),(0,l.kt)("p",null,"Therefore, we can use Bool ADT pattern matching to perform a basic if statement"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ocaml"},"match is_equal with\n    | True =>\n    | False =>\nend\n")),(0,l.kt)("h2",{id:"further-reading"},"Further reading"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://scilla.readthedocs.io/en/latest/scilla-in-depth.html?highlight=bool#boolean"},"Bool")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://scilla.readthedocs.io/en/latest/stdlib.html?highlight=bool#boolutils"},"BoolUtils")))}f.isMDXComponent=!0}}]);