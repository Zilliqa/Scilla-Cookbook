"use strict";(self.webpackChunkdocu_scilla=self.webpackChunkdocu_scilla||[]).push([[6852],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8632:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),s=["components"],o={sidebar_position:2},c="Zilliqa-JS Quickstart",l={unversionedId:"recipes/contract-interaction/zilliqa-js-quickstart",id:"recipes/contract-interaction/zilliqa-js-quickstart",isDocsHomePage:!1,title:"Zilliqa-JS Quickstart",description:"Getting started",source:"@site/docs/recipes/contract-interaction/zilliqa-js-quickstart.md",sourceDirName:"recipes/contract-interaction",slug:"/recipes/contract-interaction/zilliqa-js-quickstart",permalink:"/recipes/contract-interaction/zilliqa-js-quickstart",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/recipes/contract-interaction/zilliqa-js-quickstart.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Utilities",permalink:"/recipes/scilla-contract/utilities"},next:{title:"IDE ADTs",permalink:"/recipes/contract-interaction/ide-adt"}},u=[{value:"Getting started",id:"getting-started",children:[]},{value:"Examples",id:"examples",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"zilliqa-js-quickstart"},"Zilliqa-JS Quickstart"),(0,i.kt)("h2",{id:"getting-started"},"Getting started"),(0,i.kt)("p",null,"You will need Node and NPM installed on your developer machine for this guide."),(0,i.kt)("p",null,"Read the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Zilliqa/Zilliqa-JavaScript-Library"},"repo readme")," to get started with ",(0,i.kt)("inlineCode",{parentName:"p"},"npm installing")," zilliqa-js to your local repo."),(0,i.kt)("p",null,"Create a burner testing wallet and fund it with tokens from the faucet."),(0,i.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Do not publish your test wallet private key as a build artifact, your funds could be stolen"))),(0,i.kt)("p",null,"Review the documentation from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Zilliqa/Zilliqa-JavaScript-Library-Examples"},"examples repo for zilliqa-js")),(0,i.kt)("p",null,"Call a specific example by installing the dependencies and involking the example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd Zilliqa-JavaScript-Library-Examples\ncd node\nnpm i\n\nnode helloWorld.js\n")),(0,i.kt)("p",null,"The console will respond with"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'My account address is: 0x8254b2C9aCdf181d5d6796d63320fBb20D4Edd12\nMy account bech32 address is: zil1sf2t9jdvmuvp6ht8jmtrxg8mkgx5ahgj6h833r\n\nYour account balance is:\n{ balance: \'10722145999990000\', nonce: 1468 }\n\nCurrent Minimum Gas Price: 2000000000\nMy Gas Price 2000000000\nIs the gas price sufficient? true\n\nSending a payment transaction to the network...\n\nThe transaction id is: 035a2ae08d0b4d12f31ee6c0315d91b4bb9150c1f078fc88e0ee3b5640f2d318\n\nThe transaction status is:\n{ cumulative_gas: 50, epoch_num: \'3129050\', success: true }\n\nDeploying a new contract....\nDeployment Transaction ID: 6a67c5d1fb65f7fae9c02ee81b37fb5855bbfd3d17d163a908bb5f667419d1df\n\nDeployment Transaction Receipt:\n{ cumulative_gas: 482, epoch_num: \'3129052\', success: true }\nThe contract address is:\n0xD1F5c962F1c6A77253BFD799B3472D05de414ae2\n\nCalling setHello transition with msg: Hello, the time is 1629086853792\n{\n    "accepted": false,\n    "cumulative_gas": 357,\n    "epoch_num": "3129054",\n    "event_logs": [\n        {\n            "_eventname": "setHello()",\n            "address": "0xd1f5c962f1c6a77253bfd799b3472d05de414ae2",\n            "params": [\n                {\n                    "type": "Int32",\n                    "value": "2",\n                    "vname": "code"\n                }\n            ]\n        }\n    ],\n    "success": true\n}\n\nGetting contract state...\nThe state of the contract is:\n{\n    "_balance": "0",\n    "welcome_msg": "Hello, the time is 1629086853792"\n}\n')),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"shows the javascript required to call a specific transition\ncallContract.js\n\nshows the javascript required to create a list of signed batch transactions\ncreateBatchTransaction.js\n\nshows the javascript required to create a list of batch transactions with correct nonce\ncreateBatchTransactionWithoutConfirm.js\n\nshows the javascript required to post a raw transaction\ncreateTransactionRaw.js\n\nshows the javascript required to deploy a contract\ndeployContract.js\n\nshows the javascript required to return all the particular transactions that happened for a particular block\ngetTxnBodiesForTxBlock.js\n\nshows the javascript required to interact with the helloWorld tutorial scilla\nhelloWorld.js\n\nshows the javascript required to listen for events\nnewEventLogSubscriptions.js\n\nshows the javascript required to listen for new block events\nnewTxBlockSubscriptions.js\n\nshows the javascript required to query init params, or state params including maps\nqueryState.js\n\nget a particular transaction from a given transaction hash\nqueryTransaction.js\n\nget the status of a particular transaction from a given transaction hash\nqueryTransactionStatus.js\n\nshows the javascript required to sign a unsigned batch transaction\nsignBatchTransaction.js\n\nwalletSign.js\n")))}d.isMDXComponent=!0}}]);