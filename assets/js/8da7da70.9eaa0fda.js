"use strict";(self.webpackChunkdocu_scilla=self.webpackChunkdocu_scilla||[]).push([[5952],{3905:function(e,t,o){o.d(t,{Zo:function(){return u},kt:function(){return f}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),b=s(o),f=r,m=b["".concat(c,".").concat(f)]||b[f]||p[f]||a;return o?n.createElement(m,l(l({ref:t},u),{},{components:o})):n.createElement(m,l({ref:t},u))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=o[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}b.displayName="MDXCreateElement"},8907:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return b}});var n=o(7462),r=o(3366),a=(o(7294),o(3905)),l=["components"],i={tags:["bool","boolean","true","false","if"]},c="Boolean",s={unversionedId:"recipes/scilla-contract/bool",id:"recipes/scilla-contract/bool",isDocsHomePage:!1,title:"Boolean",description:"The boolean (bool) is a type which can have two values, true and false. A bool is considered an ADT when performing interactions with contracts.",source:"@site/docs/recipes/scilla-contract/bool.md",sourceDirName:"recipes/scilla-contract",slug:"/recipes/scilla-contract/bool",permalink:"/Scilla-Cookbook/recipes/scilla-contract/bool",editUrl:"https://github.com/Zilliqa/Scilla-Cookbook/docs/recipes/scilla-contract/bool.md",tags:[{label:"bool",permalink:"/Scilla-Cookbook/tags/bool"},{label:"boolean",permalink:"/Scilla-Cookbook/tags/boolean"},{label:"true",permalink:"/Scilla-Cookbook/tags/true"},{label:"false",permalink:"/Scilla-Cookbook/tags/false"},{label:"if",permalink:"/Scilla-Cookbook/tags/if"}],version:"current",frontMatter:{tags:["bool","boolean","true","false","if"]},sidebar:"tutorialSidebar",previous:{title:"BNum",permalink:"/Scilla-Cookbook/recipes/scilla-contract/bnum"},next:{title:"Decentralised Exchange (DEX)",permalink:"/Scilla-Cookbook/recipes/scilla-contract/dex"}},u=[{value:"Further Reading",id:"further-reading",children:[]}],p={toc:u};function b(e){var t=e.components,o=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"boolean"},"Boolean"),(0,a.kt)("p",null,"The boolean (bool) is a type which can have two values, true and false. A bool is considered an ADT when performing interactions with contracts."),(0,a.kt)("p",null,"Consider the below definition of creating a type similar to bool."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ocaml"},"type Example = | True | False\n")),(0,a.kt)("p",null,"The bool value can be returned from functions like ",(0,a.kt)("inlineCode",{parentName:"p"},"builtin eq")," which leverages the two types of bool to return a value. The value ",(0,a.kt)("inlineCode",{parentName:"p"},"is_equal")," is either true or false."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ocaml"},"is_equal = builtin eq a b\n")),(0,a.kt)("p",null,"Therefore, we can use bool ADT pattern matching to perform a basic if statement"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ocaml"},"match is_equal with\n    | True =>\n    | False =>\nend\n")),(0,a.kt)("h2",{id:"further-reading"},"Further Reading"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://scilla.readthedocs.io/en/latest/scilla-in-depth.html?highlight=bool#boolean"},"Bool")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://scilla.readthedocs.io/en/latest/stdlib.html?highlight=bool#boolutils"},"BoolUtils")))}b.isMDXComponent=!0}}]);